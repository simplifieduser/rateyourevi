// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model MaleStudent {
  id        Int    @id @default(autoincrement())
  fullName  String
  firstName String
  lastName  String

  totalVotes Int
  votedUsers User[]

  @@fulltext(fields: [fullName])
}

model FemaleStudent {
  id        Int    @id @default(autoincrement())
  fullName  String
  firstName String
  lastName  String

  totalVotes Int
  votedUsers User[]

  @@fulltext(fields: [fullName])
}

model User {
  id   Int    @id @default(autoincrement())
  name String
  sub  String @unique

  hasVoted          Boolean
  userVotedMale     MaleStudent?   @relation(fields: [userVotedMaleId], references: [id])
  userVotedMaleId   Int?           @unique
  userVotedFemale   FemaleStudent? @relation(fields: [userVotedFemaleId], references: [id])
  userVotedFemaleId Int?           @unique

  createdSongRequests SongRequest[]
  votedSongsRequests UserSongRequestVote[]
}

model SongRequest {
  id         Int    @id @default(autoincrement())
  songId     String @unique
  songName   String
  songArtist String
  songAlbum  String
  songUrl    String

  totalVotes    Int
  votedUsers UserSongRequestVote[]
  
  requestUser   User @relation(fields: [requestUserId], references: [id])
  requestUserId Int

  @@index([requestUserId])
}

model UserSongRequestVote {

  user User @relation(fields: [userId], references: [id])
  userId Int
  request SongRequest @relation(fields: [requestId], references: [id])
  requestId Int

  @@index([userId])
  @@index([requestId])
  @@id([userId, requestId])

}
